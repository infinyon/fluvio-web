name: main CI workflow for PR


concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main]

env:
    WASI_TARGET: wasm32-unknown-unknown
    FLUVIO_URL: https://hub.infinyon.cloud/install/install.sh
    FLUVIO_CHANNEL: stable
    
jobs:

  check:
    name: Check widgets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install wasm target
        run:  rustup target add ${{ env.WASI_TARGET }}

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 10

      - name: Fmt check
        run: make fmt
        
      - name: Clippy check
        run: make clippy


  build-web:
    name: Build web lib
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install wasm target
        run:  rustup target add ${{ env.WASI_TARGET }}


      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 10

      - name: Build web
        run: make -C crates/fluvio-web build

  build-widget:
    name: Build widget
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install wasm target
        run:  rustup target add ${{ env.WASI_TARGET }}

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        timeout-minutes: 10

      - name: install trunk
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall trunk --force
  
      - name: Build widget
        run: make -C widgets/counter build


  # To satisfy the merge queue check       
  done:
    name: Done
    needs:
      - check
      - build-web
      - build-widget
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Dump needs context
      env:
        CONTEXT: ${{ toJson(needs) }}
      run: |
        echo -e "\033[33;1;4mDump context\033[0m"
        echo -e "$CONTEXT\n"
    - name: Report failure on cancellation
      if: ${{ contains(needs.*.result, 'cancelled') || cancelled() }}
      run: exit 1
    - name: Failing test and build
      if: ${{ contains(needs.*.result, 'failure') }}
      run: exit 1
    - name: Successful test and build
      if: ${{ !(contains(needs.*.result, 'failure')) }}
      run: exit 0